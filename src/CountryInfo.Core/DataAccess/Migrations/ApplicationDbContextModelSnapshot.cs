// <auto-generated />
using System;
using CountryInfo.Core.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CountryInfo.Core.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("CountryInfo.Core.Domain.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Capital")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("TEXT")
                        .IsFixedLength();

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<long>("Population")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Subregion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Country");
                });

            modelBuilder.Entity("CountryInfo.Core.Domain.Country", b =>
                {
                    b.OwnsOne("CountryInfo.Core.Domain.CountryStatistic", "Statistic", b1 =>
                        {
                            b1.Property<Guid>("CountryId")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("AddedAt")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("LastRequestedAt")
                                .HasColumnType("TEXT");

                            b1.Property<int>("TotalRequests")
                                .HasColumnType("INTEGER");

                            b1.HasKey("CountryId");

                            b1.ToTable("Country");

                            b1.WithOwner()
                                .HasForeignKey("CountryId");
                        });

                    b.Navigation("Statistic")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
